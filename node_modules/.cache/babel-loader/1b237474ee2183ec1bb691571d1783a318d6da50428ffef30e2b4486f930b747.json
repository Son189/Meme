{"ast":null,"code":"var _jsxFileName = \"/home/user/Memes-Home/meme/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport \"./Home.css\";\nimport React, { useState, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [images, setImages] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const [savedMemes, setSavedMemes] = useState([]);\n  useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes').then(response => response.json()).then(data => setImages(data.data.memes)).catch(error => console.log(error));\n  }, []);\n  function handleCreateMeme() {\n    setSelectedImage(images[selectedIndex]);\n  }\n  function handlePreviousImage() {\n    setSelectedIndex(selectedIndex - 1);\n  }\n  function handleNextImage() {\n    setSelectedIndex(selectedIndex + 1);\n  }\n  function handleTopTextChange(event) {\n    setTopText(event.target.value);\n  }\n  function handleBottomTextChange(event) {\n    setBottomText(event.target.value);\n  }\n  function handleSaveMeme() {\n    const url = `https://api.imgflip.com/caption_image?template_id=${selectedImage.id}&username=<YOUR_USERNAME>&password=<YOUR_PASSWORD>&text0=${topText}&text1=${bottomText}`;\n    fetch(url).then(response => response.json()).then(data => {\n      const memeUrl = data.data.url;\n      setSavedMemes([...savedMemes, {\n        image: selectedImage,\n        topText,\n        bottomText,\n        url: memeUrl\n      }]);\n    }).catch(error => console.log(error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meme Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-button\",\n      onClick: handleCreateMeme,\n      children: \"Create Meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage.url,\n        alt: selectedImage.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-text\",\n          children: \"Top Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Textfit, {\n          mode: \"single\",\n          min: 16,\n          max: 60,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"top-text\",\n            value: topText,\n            onChange: handleTopTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-text\",\n          children: \"Bottom Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Textfit, {\n          mode: \"single\",\n          min: 16,\n          max: 60,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"bottom-text\",\n            value: bottomText,\n            onChange: handleBottomTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePreviousImage,\n          disabled: selectedIndex === 0,\n          children: \"<\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextImage,\n          disabled: selectedIndex === images.length - 1,\n          children: \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-button\",\n        onClick: handleSaveMeme,\n        children: \"Save Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-memes\",\n      children: savedMemes.map((savedMeme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-meme\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: savedMeme.url,\n          alt: `${savedMeme.image.name} meme`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: savedMeme.topText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: savedMeme.bottomText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"SF46wK2uAgvuTZkg42YI9SsZMMI=\");\n_c = Home;\nexport default H;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Textfit","jsxDEV","_jsxDEV","Home","_s","images","setImages","selectedIndex","setSelectedIndex","selectedImage","setSelectedImage","topText","setTopText","bottomText","setBottomText","savedMemes","setSavedMemes","fetch","then","response","json","data","memes","catch","error","console","log","handleCreateMeme","handlePreviousImage","handleNextImage","handleTopTextChange","event","target","value","handleBottomTextChange","handleSaveMeme","url","id","memeUrl","image","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","name","htmlFor","mode","min","max","type","onChange","disabled","length","map","savedMeme","index","_c","H","$RefreshReg$"],"sources":["/home/user/Memes-Home/meme/src/components/Home.js"],"sourcesContent":["\nimport \"./Home.css\"\n\nimport React, { useState, useEffect } from 'react';\nimport Textfit from 'react-textfit';\n\n\nfunction Home() {\n  const [images, setImages] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const [savedMemes, setSavedMemes] = useState([]);\n\n  useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes')\n      .then(response => response.json())\n      .then(data => setImages(data.data.memes))\n      .catch(error => console.log(error));\n  }, []);\n\n  function handleCreateMeme() {\n    setSelectedImage(images[selectedIndex]);\n  }\n\n  function handlePreviousImage() {\n    setSelectedIndex(selectedIndex - 1);\n  }\n\n  function handleNextImage() {\n    setSelectedIndex(selectedIndex + 1);\n  }\n\n  function handleTopTextChange(event) {\n    setTopText(event.target.value);\n  }\n\n  function handleBottomTextChange(event) {\n    setBottomText(event.target.value);\n  }\n\n  function handleSaveMeme() {\n    const url = `https://api.imgflip.com/caption_image?template_id=${selectedImage.id}&username=<YOUR_USERNAME>&password=<YOUR_PASSWORD>&text0=${topText}&text1=${bottomText}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        const memeUrl = data.data.url;\n        setSavedMemes([...savedMemes, { image: selectedImage, topText, bottomText, url: memeUrl }]);\n      })\n      .catch(error => console.log(error));\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Meme Generator</h1>\n      <button className=\"create-button\" onClick={handleCreateMeme}>Create Meme</button>\n      {selectedImage && (\n        <div className=\"selected-image\">\n          <img src={selectedImage.url} alt={selectedImage.name} />\n          <div className=\"text-inputs\">\n            <label htmlFor=\"top-text\">Top Text:</label>\n            <Textfit mode=\"single\" min={16} max={60}>\n              <input type=\"text\" id=\"top-text\" value={topText} onChange={handleTopTextChange} />\n            </Textfit>\n            <label htmlFor=\"bottom-text\">Bottom Text:</label>\n            <Textfit mode=\"single\" min={16} max={60}>\n              <input type=\"text\" id=\"bottom-text\" value={bottomText} onChange={handleBottomTextChange} />\n            </Textfit>\n          </div>\n          <div className=\"arrow-buttons\">\n            <button onClick={handlePreviousImage} disabled={selectedIndex === 0}>{\"<\"}</button>\n            <button onClick={handleNextImage} disabled={selectedIndex === images.length - 1}>{\">\"}</button>\n          </div>\n          <button className=\"save-button\" onClick={handleSaveMeme}>Save Meme</button>\n        </div>\n      )}\n      <div className=\"saved-memes\">\n        {savedMemes.map((savedMeme, index) => (\n          <div key={index} className=\"saved-meme\">\n            <img src={savedMeme.url} alt={`${savedMeme.image.name} meme`} />\n            <div className=\"text\">\n              <p>{savedMeme.topText}</p>\n              <p>{savedMeme.bottomText}</p>\n            </div>\n          </div>\n          ))}\n          </div>\n          </div>\n  )}\n       \nexport default H"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}