{"ast":null,"code":"var _jsxFileName = \"/home/user/Memes-Home/meme/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimpo;\nfunction Home() {\n  _s();\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const [showImages, setShowImages] = useState(false);\n  useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes').then(response => response.json()).then(data => setImages(data.data.memes)).catch(error => console.log(error));\n  }, []);\n  function handleImageClick(image) {\n    setSelectedImage(image);\n  }\n  function handleTopTextChange(event) {\n    setTopText(event.target.value);\n  }\n  function handleBottomTextChange(event) {\n    setBottomText(event.target.value);\n  }\n  function handleCreateMeme() {\n    const url = `https://api.imgflip.com/caption_image?template_id=${selectedImage.id}&username=<YOUR_USERNAME>&password=<YOUR_PASSWORD>&text0=${topText}&text1=${bottomText}`;\n    fetch(url).then(response => response.json()).then(data => {\n      const memeUrl = data.data.url;\n      window.open(memeUrl, '_blank');\n    }).catch(error => console.log(error));\n  }\n  function handleChooseImage() {\n    setShowImages(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meme Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !showImages && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleChooseImage,\n      children: \"Choose Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }, this), showImages && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"images\",\n        children: images.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.url,\n          alt: image.name,\n          onClick: () => handleImageClick(image),\n          className: (selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage.id) === image.id ? 'selected' : ''\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedImage.url,\n          alt: selectedImage.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"top-text\",\n            children: \"Top Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Textfit, {\n            mode: \"single\",\n            min: 16,\n            max: 60,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"top-text\",\n              value: topText,\n              onChange: handleTopTextChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bottom-text\",\n            children: \"Bottom Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Textfit, {\n            mode: \"single\",\n            min: 16,\n            max: 60,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"bottom-text\",\n              value: bottomText,\n              onChange: handleBottomTextChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-button\",\n          onClick: handleCreateMeme,\n          children: \"Create Meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"SYSV4mBLMFujM3Y1OaQjcFjH1gE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Textfit","jsxDEV","_jsxDEV","Fragment","_Fragment","impo","Home","_s","images","setImages","selectedImage","setSelectedImage","topText","setTopText","bottomText","setBottomText","showImages","setShowImages","fetch","then","response","json","data","memes","catch","error","console","log","handleImageClick","image","handleTopTextChange","event","target","value","handleBottomTextChange","handleCreateMeme","url","id","memeUrl","window","open","handleChooseImage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","src","alt","name","htmlFor","mode","min","max","type","onChange","_c","$RefreshReg$"],"sources":["/home/user/Memes-Home/meme/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimpo\n\nfunction Home() {\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const [showImages, setShowImages] = useState(false);\n\n  useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes')\n      .then(response => response.json())\n      .then(data => setImages(data.data.memes))\n      .catch(error => console.log(error));\n  }, []);\n\n  function handleImageClick(image) {\n    setSelectedImage(image);\n  }\n\n  function handleTopTextChange(event) {\n    setTopText(event.target.value);\n  }\n\n  function handleBottomTextChange(event) {\n    setBottomText(event.target.value);\n  }\n\n  function handleCreateMeme() {\n    const url = `https://api.imgflip.com/caption_image?template_id=${selectedImage.id}&username=<YOUR_USERNAME>&password=<YOUR_PASSWORD>&text0=${topText}&text1=${bottomText}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        const memeUrl = data.data.url;\n        window.open(memeUrl, '_blank');\n      })\n      .catch(error => console.log(error));\n  }\n\n  function handleChooseImage() {\n    setShowImages(true);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Meme Generator</h1>\n      {!showImages && <button onClick={handleChooseImage}>Choose Image</button>}\n      {showImages && (\n        <>\n          <div className=\"images\">\n            {images.map((image) => (\n              <img\n                key={image.id}\n                src={image.url}\n                alt={image.name}\n                onClick={() => handleImageClick(image)}\n                className={selectedImage?.id === image.id ? 'selected' : ''}\n              />\n            ))}\n          </div>\n          {selectedImage && (\n            <div className=\"selected-image\">\n              <img src={selectedImage.url} alt={selectedImage.name} />\n              <div className=\"text-inputs\">\n                <label htmlFor=\"top-text\">Top Text:</label>\n                <Textfit mode=\"single\" min={16} max={60}>\n                  <input type=\"text\" id=\"top-text\" value={topText} onChange={handleTopTextChange} />\n                </Textfit>\n                <label htmlFor=\"bottom-text\">Bottom Text:</label>\n                <Textfit mode=\"single\" min={16} max={60}>\n                  <input type=\"text\" id=\"bottom-text\" value={bottomText} onChange={handleBottomTextChange} />\n                </Textfit>\n              </div>\n              <button className=\"create-button\" onClick={handleCreateMeme}>Create Meme</button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}