{"ast":null,"code":"var _jsxFileName = \"/home/user/Memes-Home/meme/src/components/MemeGen.js\",\n  _s = $RefreshSig$();\nimport \"./gen.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemeGenerator() {\n  _s();\n  const [topText, setTopText] = useState(\"\");\n  const [bottomText, setBottomText] = useState(\"\");\n  const [randomImg, setRandomImg] = useState(\"http://i.imgflip.com/1bij.jpg\");\n  const [savedMemes, setSavedMemes] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\"https://api.imgflip.com/get_memes\");\n      const data = await response.json();\n      const memes = data.data.memes;\n      const randomNum = Math.floor(Math.random() * memes.length);\n      const randomMemeImg = memes[randomNum].url;\n      setRandomImg(randomMemeImg);\n    }\n    fetchData();\n  }, []);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    name === \"topText\" ? setTopText(value) : setBottomText(value);\n  };\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const response = await fetch(\"https://api.imgflip.com/get_memes\");\n    const data = await response.json();\n    const memes = data.data.memes;\n    const randomNum = Math.floor(Math.random() * memes.length);\n    const randomMemeImg = memes[randomNum].url;\n    setRandomImg(randomMemeImg);\n  };\n  const handleSaveMeme = event => {\n    event.preventDefault();\n    const newMeme = {\n      topText,\n      bottomText,\n      img: randomImg\n    };\n    setSavedMemes([...savedMemes, newMeme]);\n    setTopText(\"\");\n    setBottomText(\"\");\n    fetch(\"https://example.com/memes\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newMeme)\n    });\n  };\n  useEffect(() => {\n    async function fetchSavedMemes() {\n      const response = await fetch(\"https://example.com/memes\");\n      const data = await response.json();\n      setSavedMemes(data);\n    }\n    fetchSavedMemes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meme Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"topText\",\n        placeholder: \"Top Text\",\n        value: topText,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"bottomText\",\n        placeholder: \"Bottom Text\",\n        value: bottomText,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: randomImg,\n        alt: \"Random Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveMeme,\n        children: \"Save Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Saved Memes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-memes\",\n      children: savedMemes.map((meme, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: meme.img,\n          alt: \"Saved Meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: meme.topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: meme.bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(MemeGenerator, \"JgEnqcBT6+S61l6aL6egfo4K/M8=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MemeGenerator","_s","topText","setTopText","bottomText","setBottomText","randomImg","setRandomImg","savedMemes","setSavedMemes","fetchData","response","fetch","data","json","memes","randomNum","Math","floor","random","length","randomMemeImg","url","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","handleSaveMeme","newMeme","img","method","headers","body","JSON","stringify","fetchSavedMemes","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","src","alt","onClick","className","map","meme","index","_c","$RefreshReg$"],"sources":["/home/user/Memes-Home/meme/src/components/MemeGen.js"],"sourcesContent":["import \"./gen.css\"\n \nimport React, { useState, useEffect } from \"react\";\n\nfunction MemeGenerator() {\n  const [topText, setTopText] = useState(\"\");\n  const [bottomText, setBottomText] = useState(\"\");\n  const [randomImg, setRandomImg] = useState(\"http://i.imgflip.com/1bij.jpg\");\n  const [savedMemes, setSavedMemes] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\"https://api.imgflip.com/get_memes\");\n      const data = await response.json();\n      const memes = data.data.memes;\n      const randomNum = Math.floor(Math.random() * memes.length);\n      const randomMemeImg = memes[randomNum].url;\n      setRandomImg(randomMemeImg);\n    }\n    fetchData();\n  }, []);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    name === \"topText\" ? setTopText(value) : setBottomText(value);\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const response = await fetch(\"https://api.imgflip.com/get_memes\");\n    const data = await response.json();\n    const memes = data.data.memes;\n    const randomNum = Math.floor(Math.random() * memes.length);\n    const randomMemeImg = memes[randomNum].url;\n    setRandomImg(randomMemeImg);\n  };\n\n  const handleSaveMeme = (event) => {\n    event.preventDefault();\n    const newMeme = {\n      topText,\n      bottomText,\n      img: randomImg\n    };\n    setSavedMemes([...savedMemes, newMeme]);\n    setTopText(\"\");\n    setBottomText(\"\");\n    fetch(\"https://example.com/memes\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newMeme)\n    });\n  };\n\n  useEffect(() => {\n    async function fetchSavedMemes() {\n      const response = await fetch(\"https://example.com/memes\");\n      const data = await response.json();\n      setSavedMemes(data);\n    }\n    fetchSavedMemes();\n  }, []);\n\n  return (\n    <div>\n      <h1>Meme Generator</h1>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"topText\"\n          placeholder=\"Top Text\"\n          value={topText}\n          onChange={handleInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"bottomText\"\n          placeholder=\"Bottom Text\"\n          value={bottomText}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">Generate Meme</button>\n      </form>\n      <div>\n        <img src={randomImg} alt=\"Random Meme\" />\n        <button onClick={handleSaveMeme}>Save Meme</button>\n      </div>\n      <h2>Saved Memes</h2>\n      <div className=\"saved-memes\">\n        {savedMemes.map((meme, index) => (\n          <div key={index} className=\"meme-card\">\n            <img src={meme.img} alt=\"Saved Meme\" />\n            <h3>{meme.topText}</h3>\n            <h3>{meme.bottomText}</h3>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default MemeGenerator;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}