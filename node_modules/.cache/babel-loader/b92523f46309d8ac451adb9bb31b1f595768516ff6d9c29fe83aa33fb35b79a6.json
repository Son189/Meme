{"ast":null,"code":"var _jsxFileName = \"/home/user/Memes-Home/meme/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport './MemeGenerator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemeGenerator() {\n  _s();\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes').then(response => response.json()).then(data => setImages(data.data.memes)).catch(error => console.log(error));\n  }, []);\n  function handleImageClick(image) {\n    setSelectedImage(image);\n  }\n  function handleTopTextChange(event) {\n    setTopText(event.target.value);\n  }\n  function handleBottomTextChange(event) {\n    setBottomText(event.target.value);\n  }\n  function handleCreateMeme() {\n    const url = `https://api.imgflip.com/caption_image?template_id=${selectedImage.id}&username=<YOUR_USERNAME>&password=<YOUR_PASSWORD>&text0=${topText}&text1=${bottomText}`;\n    fetch(url).then(response => response.json()).then(data => {\n      const memeUrl = data.data.url;\n      window.open(memeUrl, '_blank');\n    }).catch(error => console.log(error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Meme Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.url,\n        alt: image.name,\n        onClick: () => handleImageClick(image),\n        className: (selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage.id) === image.id ? 'selected' : ''\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedImage.url,\n        alt: selectedImage.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"top-text\",\n          children: \"Top Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Textfit, {\n          mode: \"single\",\n          min: 16,\n          max: 60,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"top-text\",\n            value: topText,\n            onChange: handleTopTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"bottom-text\",\n          children: \"Bottom Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Textfit, {\n          mode: \"single\",\n          min: 16,\n          max: 60,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"bottom-text\",\n            value: bottomText,\n            onChange: handleBottomTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-button\",\n        onClick: handleCreateMeme,\n        children: \"Create Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(MemeGenerator, \"4gA9z+vPgluyNZYLgMXdYq0+dNA=\");\n_c = MemeGenerator;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","useEffect","Textfit","jsxDEV","_jsxDEV","MemeGenerator","_s","images","setImages","selectedImage","setSelectedImage","topText","setTopText","bottomText","setBottomText","fetch","then","response","json","data","memes","catch","error","console","log","handleImageClick","image","handleTopTextChange","event","target","value","handleBottomTextChange","handleCreateMeme","url","id","memeUrl","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","name","onClick","htmlFor","mode","min","max","type","onChange","_c","Home","$RefreshReg$"],"sources":["/home/user/Memes-Home/meme/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Textfit from 'react-textfit';\nimport './MemeGenerator.css';\n\nfunction MemeGenerator() {\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n\n  useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes')\n      .then(response => response.json())\n      .then(data => setImages(data.data.memes))\n      .catch(error => console.log(error));\n  }, []);\n\n  function handleImageClick(image) {\n    setSelectedImage(image);\n  }\n\n  function handleTopTextChange(event) {\n    setTopText(event.target.value);\n  }\n\n  function handleBottomTextChange(event) {\n    setBottomText(event.target.value);\n  }\n\n  function handleCreateMeme() {\n    const url = `https://api.imgflip.com/caption_image?template_id=${selectedImage.id}&username=<YOUR_USERNAME>&password=<YOUR_PASSWORD>&text0=${topText}&text1=${bottomText}`;\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        const memeUrl = data.data.url;\n        window.open(memeUrl, '_blank');\n      })\n      .catch(error => console.log(error));\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Meme Generator</h1>\n      <div className=\"images\">\n        {images.map((image) => (\n          <img\n            key={image.id}\n            src={image.url}\n            alt={image.name}\n            onClick={() => handleImageClick(image)}\n            className={selectedImage?.id === image.id ? 'selected' : ''}\n          />\n        ))}\n      </div>\n      {selectedImage && (\n        <div className=\"selected-image\">\n          <img src={selectedImage.url} alt={selectedImage.name} />\n          <div className=\"text-inputs\">\n            <label htmlFor=\"top-text\">Top Text:</label>\n            <Textfit mode=\"single\" min={16} max={60}>\n              <input type=\"text\" id=\"top-text\" value={topText} onChange={handleTopTextChange} />\n            </Textfit>\n            <label htmlFor=\"bottom-text\">Bottom Text:</label>\n            <Textfit mode=\"single\" min={16} max={60}>\n              <input type=\"text\" id=\"bottom-text\" value={bottomText} onChange={handleBottomTextChange} />\n            </Textfit>\n          </div>\n          <button className=\"create-button\" onClick={handleCreateMeme}>Create Meme</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}