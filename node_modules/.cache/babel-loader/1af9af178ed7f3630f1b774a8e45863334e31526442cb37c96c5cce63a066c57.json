{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar express_1 = require(\"express\");\nvar models_1 = require(\"./lib/models\");\nvar helpers_1 = require(\"./lib/helpers\");\nvar RandomMemeGenerator = /** @class */function () {\n  function RandomMemeGenerator(connection, options, templates) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.connection = connection;\n    // Load Options\n    this.options = this.mergeOptionsWithDefaults(options);\n    // Setup model\n    this.textModel = connection.model(this.options.textCollectionName, models_1.textSchema);\n    if (options.storeMemesInDB) {\n      this.memeModel = connection.model(this.options.templateCollectionName, models_1.templateSchema);\n      this.localTemplates = [];\n    } else\n      // use local meme templates\n      {\n        this.memeModel = undefined;\n        if (templates) {\n          this.localTemplates = templates;\n        } else {\n          this.localTemplates = helpers_1.loadDefaultTemplatesFromJson();\n        }\n      }\n  }\n  RandomMemeGenerator.prototype.mergeOptionsWithDefaults = function (options) {\n    var defaultOptions = {\n      textCollectionName: \"memeText\",\n      templateCollectionName: \"memeTemplate\",\n      storeMemesInDB: false,\n      textWildcardsAllowed: true,\n      templateWildcard: '*',\n      textWildcard: '*',\n      textAlternateWildcard: \"\",\n      apiUrl: 'https://api.memegen.link'\n    };\n    return __assign(__assign({}, defaultOptions), options);\n  };\n  RandomMemeGenerator.prototype.getRandomMemeUrl = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var memeTemplate, textCount, memeTexts, finishedTexts, lines;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.getRandomMemeTemplate()];\n          case 1:\n            memeTemplate = _a.sent();\n            textCount = memeTemplate.lines.reduce(function (count, line) {\n              if (line == '') return count + 1;else return count + (line.match(new RegExp(helpers_1.escapeRegex(_this.options.templateWildcard), \"g\")) || []).length;\n            }, 0);\n            return [4 /*yield*/, this.getRandomMemeTexts(textCount)];\n          case 2:\n            memeTexts = _a.sent();\n            return [4 /*yield*/, this.processTexts(memeTexts)];\n          case 3:\n            finishedTexts = _a.sent();\n            lines = this.applyTextToTemplate(memeTemplate.lines, finishedTexts);\n            if (lines.reduce(function (t, l) {\n              return t + l + \"/\";\n            }).length > 200) {\n              return [2 /*return*/, this.getRandomMemeUrl()];\n            }\n            // Create url from template\n            return [2 /*return*/, this.encodeUrl(lines, memeTemplate)];\n        }\n      });\n    });\n  };\n  RandomMemeGenerator.prototype.getRandomMemeTemplate = function () {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var templatesFromDb, templateId;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, (_a = this.memeModel) === null || _a === void 0 ? void 0 : _a.aggregate([{\n              $sample: {\n                size: 1\n              }\n            }])];\n          case 1:\n            templatesFromDb = _b.sent();\n            if (this.options.storeMemesInDB && templatesFromDb === undefined) {\n              throw new Error(\"Unable to get template from database\");\n            } else if (this.options.storeMemesInDB && typeof templatesFromDb !== \"undefined\") {\n              return [2 /*return*/, templatesFromDb[0]];\n            } else {\n              templateId = Math.floor(Math.random() * this.localTemplates.length);\n              return [2 /*return*/, this.localTemplates[templateId]];\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  RandomMemeGenerator.prototype.getRandomMemeTexts = function (count) {\n    if (count === void 0) {\n      count = 1;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.textModel.aggregate([{\n              $sample: {\n                size: count\n              }\n            }])];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  RandomMemeGenerator.prototype.processTexts = function (texts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        return [2 /*return*/, Promise.all(texts.map(function (t) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var text, wildcardText, wildcardText;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  text = t.text;\n                  if (!this.options.textWildcardsAllowed) return [3 /*break*/, 6];\n                  _a.label = 1;\n                case 1:\n                  if (!text.includes(this.options.textWildcard)) return [3 /*break*/, 3];\n                  return [4 /*yield*/, this.getRandomMemeTexts()];\n                case 2:\n                  wildcardText = _a.sent();\n                  text = text.replace(new RegExp(helpers_1.escapeRegex(this.options.textWildcard), \"g\"), wildcardText[0].text);\n                  return [3 /*break*/, 1];\n                case 3:\n                  if (!(this.options.textAlternateWildcard !== \"\")) return [3 /*break*/, 6];\n                  _a.label = 4;\n                case 4:\n                  if (!text.includes(this.options.textAlternateWildcard)) return [3 /*break*/, 6];\n                  return [4 /*yield*/, this.getRandomMemeTexts()];\n                case 5:\n                  wildcardText = _a.sent();\n                  text = text.replace(new RegExp(helpers_1.escapeRegex(this.options.textAlternateWildcard), \"g\"), wildcardText[0].text);\n                  return [3 /*break*/, 4];\n                case 6:\n                  return [2 /*return*/, text];\n              }\n            });\n          });\n        }))];\n      });\n    });\n  };\n  RandomMemeGenerator.prototype.applyTextToTemplate = function (templateLines, texts) {\n    var _this = this;\n    var iterator = texts[Symbol.iterator]();\n    // Enumerate over all template lines\n    return templateLines.map(function (line) {\n      // Insert meme text if line is empty\n      if (line === \"\") {\n        var t = iterator.next();\n        return t.done ? \" \" : t.value;\n      } else {\n        // Insert meme text into wildcards otherwise\n        while (line.includes(_this.options.templateWildcard)) {\n          // Handle specifying the index of the text with *_1\n          if (line.includes(_this.options.templateWildcard + \"_\")) {\n            var i = parseInt(line[line.indexOf(_this.options.templateWildcard + \"_\") + 2]);\n            line = line.replace(_this.options.templateWildcard + \"_\" + i, texts[i]);\n          }\n          // Normal wildcard\n          else {\n            var t = iterator.next();\n            if (t.done) break;else line = line.replace(_this.options.templateWildcard, t.value);\n          }\n        }\n        return line;\n      }\n    });\n  };\n  RandomMemeGenerator.prototype.encodeUrl = function (lines, template) {\n    var url = this.options.apiUrl + \"/images/\" + template.urlPrefix;\n    if (template.customImg) {\n      url = this.options.apiUrl + \"/images/custom\";\n    }\n    var slug = lines.reduce(function (acc, next) {\n      return acc + '/' + helpers_1.sanitizeStringForUrl(next);\n    }, \"\");\n    url = url + slug + \".png\";\n    if (template.customImg) {\n      url = url + (\"?background=\" + template.customImg);\n    }\n    return url;\n  };\n  // Express Middleware Router\n  RandomMemeGenerator.prototype.express = function () {\n    var _this = this;\n    var router = express_1.Router();\n    router.get(\"/\", function (req, res) {\n      _this.getRandomMemeUrl().then(function (url) {\n        res.json({\n          url: url\n        });\n      });\n    });\n    router.get(\"/memes\", function (req, res) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, _b;\n        var _c;\n        return __generator(this, function (_d) {\n          switch (_d.label) {\n            case 0:\n              if (!this.options.storeMemesInDB) return [3 /*break*/, 2];\n              _b = (_a = res).json;\n              return [4 /*yield*/, (_c = this.memeModel) === null || _c === void 0 ? void 0 : _c.find({})];\n            case 1:\n              _b.apply(_a, [_d.sent()]);\n              return [3 /*break*/, 3];\n            case 2:\n              res.json(this.localTemplates);\n              _d.label = 3;\n            case 3:\n              return [2 /*return*/];\n          }\n        });\n      });\n    });\n\n    router.get(\"/text\", function (req, res) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              // Send all possible text responses\n              _b = (_a = res).json;\n              return [4 /*yield*/, this.textModel.find({})];\n            case 1:\n              // Send all possible text responses\n              _b.apply(_a, [_c.sent()]);\n              return [2 /*return*/];\n          }\n        });\n      });\n    });\n\n    router.post(\"/\", function (req, res) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _b = (_a = res).json;\n              return [4 /*yield*/, this.textModel.create({\n                text: req.body.text\n              })];\n            case 1:\n              _b.apply(_a, [_c.sent()]);\n              return [2 /*return*/];\n          }\n        });\n      });\n    });\n\n    router.delete(\"/text\", function (req, res) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, _b;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _b = (_a = res).json;\n              return [4 /*yield*/, this.textModel.deleteOne({\n                text: req.body.text\n              })];\n            case 1:\n              _b.apply(_a, [_c.sent()]);\n              return [2 /*return*/];\n          }\n        });\n      });\n    });\n\n    return router;\n  };\n  return RandomMemeGenerator;\n}();\nexports.default = RandomMemeGenerator;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","defineProperty","exports","express_1","require","models_1","helpers_1","RandomMemeGenerator","connection","options","templates","mergeOptionsWithDefaults","textModel","model","textCollectionName","textSchema","storeMemesInDB","memeModel","templateCollectionName","templateSchema","localTemplates","undefined","loadDefaultTemplatesFromJson","defaultOptions","textWildcardsAllowed","templateWildcard","textWildcard","textAlternateWildcard","apiUrl","getRandomMemeUrl","memeTemplate","textCount","memeTexts","finishedTexts","lines","_this","_a","getRandomMemeTemplate","reduce","count","line","match","RegExp","escapeRegex","getRandomMemeTexts","processTexts","applyTextToTemplate","l","encodeUrl","templatesFromDb","templateId","_b","aggregate","$sample","size","Error","Math","floor","random","texts","all","map","text","wildcardText","includes","replace","templateLines","parseInt","indexOf","template","url","urlPrefix","customImg","slug","acc","sanitizeStringForUrl","express","router","Router","get","req","res","json","_c","_d","find","post","create","delete","deleteOne","default"],"sources":["/home/user/Memes-Home/meme/node_modules/random-meme-generator/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar express_1 = require(\"express\");\nvar models_1 = require(\"./lib/models\");\nvar helpers_1 = require(\"./lib/helpers\");\nvar RandomMemeGenerator = /** @class */ (function () {\n    function RandomMemeGenerator(connection, options, templates) {\n        if (options === void 0) { options = {}; }\n        this.connection = connection;\n        // Load Options\n        this.options = this.mergeOptionsWithDefaults(options);\n        // Setup model\n        this.textModel = connection.model(this.options.textCollectionName, models_1.textSchema);\n        if (options.storeMemesInDB) {\n            this.memeModel = connection.model(this.options.templateCollectionName, models_1.templateSchema);\n            this.localTemplates = [];\n        }\n        else // use local meme templates\n         {\n            this.memeModel = undefined;\n            if (templates) {\n                this.localTemplates = templates;\n            }\n            else {\n                this.localTemplates = helpers_1.loadDefaultTemplatesFromJson();\n            }\n        }\n    }\n    RandomMemeGenerator.prototype.mergeOptionsWithDefaults = function (options) {\n        var defaultOptions = {\n            textCollectionName: \"memeText\",\n            templateCollectionName: \"memeTemplate\",\n            storeMemesInDB: false,\n            textWildcardsAllowed: true,\n            templateWildcard: '*',\n            textWildcard: '*',\n            textAlternateWildcard: \"\",\n            apiUrl: 'https://api.memegen.link'\n        };\n        return __assign(__assign({}, defaultOptions), options);\n    };\n    RandomMemeGenerator.prototype.getRandomMemeUrl = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var memeTemplate, textCount, memeTexts, finishedTexts, lines;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getRandomMemeTemplate()];\n                    case 1:\n                        memeTemplate = _a.sent();\n                        textCount = memeTemplate.lines.reduce(function (count, line) {\n                            if (line == '')\n                                return count + 1;\n                            else\n                                return count + (line.match(new RegExp(helpers_1.escapeRegex(_this.options.templateWildcard), \"g\")) || []).length;\n                        }, 0);\n                        return [4 /*yield*/, this.getRandomMemeTexts(textCount)];\n                    case 2:\n                        memeTexts = _a.sent();\n                        return [4 /*yield*/, this.processTexts(memeTexts)];\n                    case 3:\n                        finishedTexts = _a.sent();\n                        lines = this.applyTextToTemplate(memeTemplate.lines, finishedTexts);\n                        if (lines.reduce(function (t, l) { return (t + l + \"/\"); }).length > 200) {\n                            return [2 /*return*/, this.getRandomMemeUrl()];\n                        }\n                        // Create url from template\n                        return [2 /*return*/, this.encodeUrl(lines, memeTemplate)];\n                }\n            });\n        });\n    };\n    RandomMemeGenerator.prototype.getRandomMemeTemplate = function () {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var templatesFromDb, templateId;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, ((_a = this.memeModel) === null || _a === void 0 ? void 0 : _a.aggregate([{ $sample: { size: 1 } }]))];\n                    case 1:\n                        templatesFromDb = _b.sent();\n                        if (this.options.storeMemesInDB && templatesFromDb === undefined) {\n                            throw new Error(\"Unable to get template from database\");\n                        }\n                        else if (this.options.storeMemesInDB && typeof templatesFromDb !== \"undefined\") {\n                            return [2 /*return*/, templatesFromDb[0]];\n                        }\n                        else {\n                            templateId = Math.floor(Math.random() * this.localTemplates.length);\n                            return [2 /*return*/, this.localTemplates[templateId]];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RandomMemeGenerator.prototype.getRandomMemeTexts = function (count) {\n        if (count === void 0) { count = 1; }\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.textModel.aggregate([{ $sample: { size: count } }])];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RandomMemeGenerator.prototype.processTexts = function (texts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.all(texts.map(function (t) { return __awaiter(_this, void 0, void 0, function () {\n                        var text, wildcardText, wildcardText;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    text = t.text;\n                                    if (!this.options.textWildcardsAllowed) return [3 /*break*/, 6];\n                                    _a.label = 1;\n                                case 1:\n                                    if (!text.includes(this.options.textWildcard)) return [3 /*break*/, 3];\n                                    return [4 /*yield*/, this.getRandomMemeTexts()];\n                                case 2:\n                                    wildcardText = _a.sent();\n                                    text = text.replace(new RegExp(helpers_1.escapeRegex(this.options.textWildcard), \"g\"), wildcardText[0].text);\n                                    return [3 /*break*/, 1];\n                                case 3:\n                                    if (!(this.options.textAlternateWildcard !== \"\")) return [3 /*break*/, 6];\n                                    _a.label = 4;\n                                case 4:\n                                    if (!text.includes(this.options.textAlternateWildcard)) return [3 /*break*/, 6];\n                                    return [4 /*yield*/, this.getRandomMemeTexts()];\n                                case 5:\n                                    wildcardText = _a.sent();\n                                    text = text.replace(new RegExp(helpers_1.escapeRegex(this.options.textAlternateWildcard), \"g\"), wildcardText[0].text);\n                                    return [3 /*break*/, 4];\n                                case 6: return [2 /*return*/, text];\n                            }\n                        });\n                    }); }))];\n            });\n        });\n    };\n    RandomMemeGenerator.prototype.applyTextToTemplate = function (templateLines, texts) {\n        var _this = this;\n        var iterator = texts[Symbol.iterator]();\n        // Enumerate over all template lines\n        return templateLines.map(function (line) {\n            // Insert meme text if line is empty\n            if (line === \"\") {\n                var t = iterator.next();\n                return (t.done ? \" \" : t.value);\n            }\n            else {\n                // Insert meme text into wildcards otherwise\n                while (line.includes(_this.options.templateWildcard)) {\n                    // Handle specifying the index of the text with *_1\n                    if (line.includes(_this.options.templateWildcard + \"_\")) {\n                        var i = parseInt(line[line.indexOf(_this.options.templateWildcard + \"_\") + 2]);\n                        line = line.replace(_this.options.templateWildcard + \"_\" + i, texts[i]);\n                    }\n                    // Normal wildcard\n                    else {\n                        var t = iterator.next();\n                        if (t.done)\n                            break;\n                        else\n                            line = line.replace(_this.options.templateWildcard, t.value);\n                    }\n                }\n                return line;\n            }\n        });\n    };\n    RandomMemeGenerator.prototype.encodeUrl = function (lines, template) {\n        var url = this.options.apiUrl + \"/images/\" + template.urlPrefix;\n        if (template.customImg) {\n            url = this.options.apiUrl + \"/images/custom\";\n        }\n        var slug = lines.reduce(function (acc, next) {\n            return acc + '/' + helpers_1.sanitizeStringForUrl(next);\n        }, \"\");\n        url = url + slug + \".png\";\n        if (template.customImg) {\n            url = url + (\"?background=\" + template.customImg);\n        }\n        return url;\n    };\n    // Express Middleware Router\n    RandomMemeGenerator.prototype.express = function () {\n        var _this = this;\n        var router = express_1.Router();\n        router.get(\"/\", function (req, res) {\n            _this.getRandomMemeUrl().then(function (url) {\n                res.json({ url: url });\n            });\n        });\n        router.get(\"/memes\", function (req, res) { return __awaiter(_this, void 0, void 0, function () {\n            var _a, _b;\n            var _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!this.options.storeMemesInDB) return [3 /*break*/, 2];\n                        _b = (_a = res).json;\n                        return [4 /*yield*/, ((_c = this.memeModel) === null || _c === void 0 ? void 0 : _c.find({}))];\n                    case 1:\n                        _b.apply(_a, [_d.sent()]);\n                        return [3 /*break*/, 3];\n                    case 2:\n                        res.json(this.localTemplates);\n                        _d.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); });\n        router.get(\"/text\", function (req, res) { return __awaiter(_this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        // Send all possible text responses\n                        _b = (_a = res).json;\n                        return [4 /*yield*/, this.textModel.find({})];\n                    case 1:\n                        // Send all possible text responses\n                        _b.apply(_a, [_c.sent()]);\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n        router.post(\"/\", function (req, res) { return __awaiter(_this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = (_a = res).json;\n                        return [4 /*yield*/, this.textModel.create({ text: req.body.text })];\n                    case 1:\n                        _b.apply(_a, [_c.sent()]);\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n        router.delete(\"/text\", function (req, res) { return __awaiter(_this, void 0, void 0, function () {\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = (_a = res).json;\n                        return [4 /*yield*/, this.textModel.deleteOne({ text: req.body.text })];\n                    case 1:\n                        _b.apply(_a, [_c.sent()]);\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n        return router;\n    };\n    return RandomMemeGenerator;\n}());\nexports.default = RandomMemeGenerator;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}