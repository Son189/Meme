{"ast":null,"code":"var _jsxFileName = \"/home/user/Meme/src/components/MemeGen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemeGenerator() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('top_text', topText);\n    formData.append('bottom_text', bottomText);\n    fetch('http://localhost:4567/memes', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(data => {\n      // handle successful creation of meme\n    }).catch(error => {\n      // handle error\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Choose an image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: event => setImage(event.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Top text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: topText,\n        onChange: event => setTopText(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Bottom text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: bottomText,\n        onChange: event => setBottomText(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(MemeGenerator, \"kYOebPJRIH8T30aDU2LQUVKXJBU=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MemeGenerator","_s","image","setImage","topText","setTopText","bottomText","setBottomText","handleSubmit","event","preventDefault","formData","FormData","append","fetch","method","body","then","response","json","data","catch","error","onSubmit","children","type","onChange","target","files","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["/home/user/Meme/src/components/MemeGen.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction MemeGenerator() {\n  const [image, setImage] = useState(null);\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('top_text', topText);\n    formData.append('bottom_text', bottomText);\n\n    fetch('http://localhost:4567/memes', {\n      method: 'POST',\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // handle successful creation of meme\n      })\n      .catch((error) => {\n        // handle error\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Choose an image:\n        <input type=\"file\" onChange={(event) => setImage(event.target.files[0])} />\n      </label>\n      <br />\n      <label>\n        Top text:\n        <input type=\"text\" value={topText} onChange={(event) => setTopText(event.target.value)} />\n      </label>\n      <br />\n      <label>\n        Bottom text:\n        <input type=\"text\" value={bottomText} onChange={(event) => setBottomText(event.target.value)} />\n      </label>\n      <br />\n      <button type=\"submit\">Create Meme</button>\n    </form>\n  );\n}\nexport default MemeGenerator"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}