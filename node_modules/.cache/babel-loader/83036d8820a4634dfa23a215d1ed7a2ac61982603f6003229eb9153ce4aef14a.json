{"ast":null,"code":"var _jsxFileName = \"/home/user/Memes-Home/meme/src/components/Memelist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemeList() {\n  _s();\n  const [memes, setMemes] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:4567/memes').then(response => response.json()).then(data => setMemes(data)).catch(error => {\n      // handle error\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: memes.map(meme => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.image_url,\n        alt: meme.top_text + ' ' + meme.bottom_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: meme.top_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: meme.bottom_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, meme.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(MemeList, \"5gdHCcF3c1u3tVEy6qXr88dpXdk=\");\n_c = MemeList;\nexport default MemeList;\nvar _c;\n$RefreshReg$(_c, \"MemeList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MemeList","_s","memes","setMemes","fetch","then","response","json","data","catch","error","children","map","meme","src","image_url","alt","top_text","bottom_text","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/home/user/Memes-Home/meme/src/components/Memelist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MemeList() {\n  const [memes, setMemes] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:4567/memes')\n      .then((response) => response.json())\n      .then((data) => setMemes(data))\n      .catch((error) => {\n        // handle error\n      });\n  }, []);\n\n  return (\n    <div>\n      {memes.map((meme) => (\n        <div key={meme.id}>\n          <img src={meme.image_url} alt={meme.top_text + ' ' + meme.bottom_text} />\n          <p>{meme.top_text}</p>\n          <p>{meme.bottom_text}</p>\n          {/* add DeleteButton component and pass meme.id as prop */}\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default MemeList\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAEC,KAAK,IAAK;MAChB;IAAA,CACD,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAY,QAAA,EACGT,KAAK,CAACU,GAAG,CAAEC,IAAI,iBACdd,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAKe,GAAG,EAAED,IAAI,CAACE,SAAU;QAACC,GAAG,EAAEH,IAAI,CAACI,QAAQ,GAAG,GAAG,GAAGJ,IAAI,CAACK;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACzEvB,OAAA;QAAAY,QAAA,EAAIE,IAAI,CAACI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACtBvB,OAAA;QAAAY,QAAA,EAAIE,IAAI,CAACK;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAHjBT,IAAI,CAACU,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAMlB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAACrB,EAAA,CAxBQD,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAyBjB,eAAeA,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}