{"ast":null,"code":"var _jsxFileName = \"/home/user/Memes-Home/meme/src/components/MemeGen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemeForm() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [caption, setCaption] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('/memes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        image_url: imageUrl,\n        caption\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Enter title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: imageUrl,\n      onChange: e => setImageUrl(e.target.value),\n      placeholder: \"Enter image URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: caption,\n      onChange: e => setCaption(e.target.value),\n      placeholder: \"Enter caption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(MemeForm, \"OM9CqC61DOhTeH/mFu2gVpzCwTM=\");\n_c = MemeForm;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MemeForm","_s","title","setTitle","imageUrl","setImageUrl","caption","setCaption","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","image_url","then","res","json","data","console","log","catch","err","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","MemeGenerator","$RefreshReg$"],"sources":["/home/user/Memes-Home/meme/src/components/MemeGen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction MemeForm() {\n  const [title, setTitle] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [caption, setCaption] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch('/memes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ title, image_url: imageUrl, caption })\n    })\n    .then(res => res.json())\n    .then(data => {\n      console.log(data);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Enter title\" />\n      <input type=\"text\" value={imageUrl} onChange={(e) => setImageUrl(e.target.value)} placeholder=\"Enter image URL\" />\n      <input type=\"text\" value={caption} onChange={(e) => setCaption(e.target.value)} placeholder=\"Enter caption\" />\n      <button type=\"submit\">Create Meme</button>\n    </form>\n  );\n}\n\nexport default MemeGenerator"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClBC,KAAK,CAAC,QAAQ,EAAE;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEd,KAAK;QAAEe,SAAS,EAAEb,QAAQ;QAAEE;MAAQ,CAAC;IAC9D,CAAC,CAAC,CACDY,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAI;MACZH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC;EAED,oBACE1B,OAAA;IAAM2B,QAAQ,EAAElB,YAAa;IAAAmB,QAAA,gBAC3B5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAE3B,KAAM;MAAC4B,QAAQ,EAAGrB,CAAC,IAAKN,QAAQ,CAACM,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACxGrC,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEzB,QAAS;MAAC0B,QAAQ,EAAGrB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClHrC,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEvB,OAAQ;MAACwB,QAAQ,EAAGrB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC9GrC,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrC;AAEX;AAACnC,EAAA,CA/BQD,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAiCjB,eAAesC,aAAa;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}