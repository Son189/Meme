{"ast":null,"code":"var _jsxFileName = \"/home/user/Memes-Home/meme/src/components/MemeGen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./ge\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemeGenerator() {\n  _s();\n  const [memes, setMemes] = useState([]);\n  const [selectedMeme, setSelectedMeme] = useState(null);\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const [savedMemes, setSavedMemes] = useState([]);\n  useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes').then(response => response.json()).then(data => setMemes(data.data.memes));\n  }, []);\n  function handleMemeSelect(index) {\n    setSelectedMeme(memes[index]);\n  }\n  function handleTopTextChange(event) {\n    setTopText(event.target.value);\n  }\n  function handleBottomTextChange(event) {\n    setBottomText(event.target.value);\n  }\n  function handleAddMeme() {\n    const params = new URLSearchParams({\n      template_id: selectedMeme.id,\n      text0: topText,\n      text1: bottomText\n    });\n    fetch(`https://api.memegen.link/images/${selectedMeme.id}.png?${params.toString()}`).then(response => response.blob()).then(blob => {\n      const memeUrl = URL.createObjectURL(blob);\n      const newMeme = {\n        id: memes.length + 1,\n        name: selectedMeme.name,\n        url: memeUrl\n      };\n      setSavedMemes([...savedMemes, newMeme]);\n      setSelectedMeme(null);\n      setTopText('');\n      setBottomText('');\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Meme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), selectedMeme ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedMeme.url,\n        alt: selectedMeme.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        value: topText,\n        onChange: handleTopTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        value: bottomText,\n        onChange: handleBottomTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddMeme,\n        children: \"Add Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedMeme(null),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select a meme:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: memes.map((meme, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleMemeSelect(index),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: meme.url,\n            alt: meme.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)\n        }, meme.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Saved Memes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: savedMemes.map(meme => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: meme.url,\n          alt: meme.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: meme.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: meme.topText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: meme.bottomText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, meme.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(MemeGenerator, \"2AWyxRZakjO6b9RK3/efKGEbomE=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MemeGenerator","_s","memes","setMemes","selectedMeme","setSelectedMeme","topText","setTopText","bottomText","setBottomText","savedMemes","setSavedMemes","fetch","then","response","json","data","handleMemeSelect","index","handleTopTextChange","event","target","value","handleBottomTextChange","handleAddMeme","params","URLSearchParams","template_id","id","text0","text1","toString","blob","memeUrl","URL","createObjectURL","newMeme","length","name","url","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","onChange","onClick","map","meme","className","_c","$RefreshReg$"],"sources":["/home/user/Memes-Home/meme/src/components/MemeGen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./ge\"\nfunction MemeGenerator() {\n  const [memes, setMemes] = useState([]);\n  const [selectedMeme, setSelectedMeme] = useState(null);\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const [savedMemes, setSavedMemes] = useState([]);\n\n  useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes')\n      .then(response => response.json())\n      .then(data => setMemes(data.data.memes));\n  }, []);\n\n  function handleMemeSelect(index) {\n    setSelectedMeme(memes[index]);\n  }\n\n  function handleTopTextChange(event) {\n    setTopText(event.target.value);\n  }\n\n  function handleBottomTextChange(event) {\n    setBottomText(event.target.value);\n  }\n\n  function handleAddMeme() {\n    const params = new URLSearchParams({\n      template_id: selectedMeme.id,\n      text0: topText,\n      text1: bottomText,\n    });\n\n    fetch(`https://api.memegen.link/images/${selectedMeme.id}.png?${params.toString()}`)\n      .then(response => response.blob())\n      .then(blob => {\n        const memeUrl = URL.createObjectURL(blob);\n        const newMeme = { id: memes.length + 1, name: selectedMeme.name, url: memeUrl };\n        setSavedMemes([...savedMemes, newMeme]);\n        setSelectedMeme(null);\n        setTopText('');\n        setBottomText('');\n      });\n  }\n\n  return (\n    <div>\n      <h1>Add Meme</h1>\n      {selectedMeme ? (\n        <div>\n          <img src={selectedMeme.url} alt={selectedMeme.name} />\n          <br />\n          <input type=\"text\" placeholder=\"Top text\" value={topText} onChange={handleTopTextChange} />\n          <br />\n          <input type=\"text\" placeholder=\"Bottom text\" value={bottomText} onChange={handleBottomTextChange} />\n          <br />\n          <button onClick={handleAddMeme}>Add Meme</button>\n          <button onClick={() => setSelectedMeme(null)}>Cancel</button>\n        </div>\n      ) : (\n        <div>\n          <h2>Select a meme:</h2>\n          <ul>\n            {memes.map((meme, index) => (\n              <li key={meme.id} onClick={() => handleMemeSelect(index)}>\n                <img src={meme.url} alt={meme.name} />\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      <h1>Saved Memes</h1>\n      <div>\n        {savedMemes.map(meme => (\n          <div key={meme.id} className=\"card\">\n            <img src={meme.url} alt={meme.name} />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{meme.name}</h5>\n              <p className=\"card-text\">{meme.topText}</p>\n              <p className=\"card-text\">{meme.bottomText}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default MemeGenerator;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}